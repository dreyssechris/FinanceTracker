services:
  db:
    image: postgres:16-alpine
    container_name: financetracker-pg
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  api:
    build:
      context: ./FinanceTracker.Api
      dockerfile: Dockerfile
    container_name: financetracker-api
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      # Program.cs -> Environment.GetEnvironmentVariable("DEFAULT_CONNECTION")
      DEFAULT_CONNECTION: ${DEFAULT_CONNECTION}
      # Optional: CORS-Origin
      # FRONTEND_ORIGIN: "http://localhost:3000"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_HTTP_PORT}:8080"

volumes:
  pg-data:
