@use "../styles/_mixins.scss" as *;
@use "../styles/_tokens.scss" as *;

/* Desktop: normal table; Mobile: stacked cards. */
.table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.95rem;

  thead th {
    text-align: left;
    font-weight: 600;
    padding: var(--space-3) var(--space-3);
    color: var(--muted);
    border-bottom: 1px solid rgba(255,255,255,.08);
    position: sticky;
    top: 0;
    background: var(--bg);
    z-index: 1;
  }

  tbody td {
    padding: var(--space-3);
    border-bottom: 1px solid rgba(255,255,255,.06);
    vertical-align: middle;
    text-align: left;
  }

  .iconCell { width: 40px; }
  .icon { width: 1.1rem; height: 1.1rem; }
}

/* Row accent by type (left border & subtle bg) */
.type-income    { border-left: 4px solid var(--income); }
.type-expense   { border-left: 4px solid var(--expense); }
.type-investment{ border-left: 4px solid var(--investment); }

/* ACTION buttons */
.viewBtn, .editBtn, .deleteBtn {
  border: none;
  background: var(--surface-2);
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-sm);
}
.viewBtn:hover, .editBtn:hover, .deleteBtn:hover { 
  filter: brightness(1.1);
}
.viewIcon, .editIcon, .deleteIcon { 
  width: 1rem; height: 1rem; 
}

/* Accessibility helper (matches globals .srOnly; keep local too if preferred) */
.srOnly { 
  @include sr-only;
}

/* --- MOBILE MODE: transform table rows into cards --- */
@media (max-width: $bp-md) {
  .table, .table thead, .table tbody, .table th, .table td, .table tr {
     display: block; 
  }

  .table thead {
    display: none; /* hide header on mobile; weâ€™ll show data labels per cell */
  }

  .table tr {
    @include card;
    margin-bottom: var(--space-4);
    overflow: hidden;
  }

  .table td {
    display: grid;
    grid-template-columns: 8rem 1fr; /* label | value */
    gap: var(--space-2);
    padding: var(--space-3) var(--space-4);
    border: none; /* card already has border */
  }

  .table td::before {
    /* Show a label based on data-label attr (e.g., "Date", "Title") */
    content: attr(data-label);
    color: var(--muted);
    font-weight: 500;
  }

  /* icon cell: compress label column */
  .iconCell {
    grid-template-columns: 1.5rem 1fr;
  }
}

.type-income .icon {
  color: var(--income); 
}

.type-expense .icon {
  color: var(--expense); 
}  

.type-investment .icon {
  color: var(--investment); 
}
